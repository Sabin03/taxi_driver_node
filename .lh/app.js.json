{
    "sourceFile": "app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 10,
            "patches": [
                {
                    "date": 1723814063854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1723893927066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+var createError = require('http-errors');\n+var express = require('express');\n+var path = require('path');\n+var cookieParser = require('cookie-parser');\n+var logger = require('morgan');\n+\n+const cors = require('cors');\n+var fs = require('fs');\n+\n+var indexRouter = require('./routes/index');\n+var usersRouter = require('./routes/users');\n+\n+var app = express();\n+var server = require('http').createServer(app);\n+var io = require('socket.io')(server, {\n+  cors: {\n+    origin: \"http://localhost:4200\",\n+    methods: [\"GET\", \"POST\"]\n+  }\n+})\n+var serverPort = 3001;\n+\n+var user_socket_connect_list = [];\n+\n+// view engine setup\n+app.set('views', path.join(__dirname, 'views'));\n+app.set('view engine', 'ejs');\n+\n+app.use(logger('dev'));\n+app.use(express.json({ limit: '100mb' }));\n+app.use(express.urlencoded({ extended: true, limit: '100mb' }));\n+app.use(cookieParser());\n+app.use(express.static(path.join(__dirname, 'public')));\n+\n+app.use('/', indexRouter);\n+app.use('/users', usersRouter);\n+\n+const corsOptions = {\n+  origin: \"http://localhost:4200\",\n+}\n+\n+app.use(cors(corsOptions));\n+\n+// import express inside dynamic added.\n+fs.readdirSync('./controllers').forEach((file) => {\n+  if (file.substr(-3) == \".js\") {\n+    route = require('./controllers/' + file);\n+    route.controller(app, io, user_socket_connect_list);\n+  }\n+})\n+\n+// catch 404 and forward to error handler\n+app.use(function (req, res, next) {\n+  next(createError(404));\n+});\n+\n+// error handler\n+app.use(function (err, req, res, next) {\n+  // set locals, only providing error in development\n+  res.locals.message = err.message;\n+  res.locals.error = req.app.get('env') === 'development' ? err : {};\n+\n+  // render the error page\n+  res.status(err.status || 500);\n+  res.render('error');\n+});\n+\n+module.exports = app;\n+\n+server.listen(serverPort);\n+\n+console.log(\"Server Start : \" + serverPort );\n+\n+Array.prototype.swap = (x, y) => {\n+  var b = this[x];\n+  this[x] = this[y];\n+  this[y] = b;\n+  return this;\n+}\n+\n+Array.prototype.insert = (index, item) => {\n+  this.splice(index, 0, item);\n+}\n+\n+Array.prototype.replace_null = (replace = '\"\"') => {\n+  return JSON.parse(JSON.stringify(this).replace(/mull/g, replace));\n+}\n+\n+String.prototype.replaceAll = (search, replacement) => {\n+  var target = this;\n+  return target.replace(new RegExp(search, 'g'), replacement);\n+}\n"
                },
                {
                    "date": 1723973575116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+var createError = require('http-errors');\n+var express = require('express');\n+var path = require('path');\n+var cookieParser = require('cookie-parser');\n+var logger = require('morgan');\n+\n+const cors = require('cors');\n+var fs = require('fs');\n+\n+var indexRouter = require('./routes/index');\n+var usersRouter = require('./routes/users');\n+\n+var app = express();\n+var server = require('http').createServer(app);\n+var io = require('socket.io')(server, {\n+  cors: {\n+    origin: \"http://localhost:4200\",\n+    methods: [\"GET\", \"POST\"]\n+  }\n+})\n+var serverPort = 3004;\n+\n+var user_socket_connect_list = [];\n+\n+// view engine setup\n+app.set('views', path.join(__dirname, 'views'));\n+app.set('view engine', 'ejs');\n+\n+app.use(logger('dev'));\n+app.use(express.json({ limit: '100mb' }));\n+app.use(express.urlencoded({ extended: true, limit: '100mb' }));\n+app.use(cookieParser());\n+app.use(express.static(path.join(__dirname, 'public')));\n+\n+app.use('/', indexRouter);\n+app.use('/users', usersRouter);\n+\n+const corsOptions = {\n+  origin: \"http://localhost:4200\",\n+}\n+\n+app.use(cors(corsOptions));\n+\n+// import express inside dynamic added.\n+fs.readdirSync('./controllers').forEach((file) => {\n+  if (file.substr(-3) == \".js\") {\n+    route = require('./controllers/' + file);\n+    route.controller(app, io, user_socket_connect_list);\n+  }\n+})\n+\n+// catch 404 and forward to error handler\n+app.use(function (req, res, next) {\n+  next(createError(404));\n+});\n+\n+// error handler\n+app.use(function (err, req, res, next) {\n+  // set locals, only providing error in development\n+  res.locals.message = err.message;\n+  res.locals.error = req.app.get('env') === 'development' ? err : {};\n+\n+  // render the error page\n+  res.status(err.status || 500);\n+  res.render('error');\n+});\n+\n+module.exports = app;\n+\n+server.listen(serverPort);\n+\n+console.log(\"Server Start : \" + serverPort );\n+\n+Array.prototype.swap = (x, y) => {\n+  var b = this[x];\n+  this[x] = this[y];\n+  this[y] = b;\n+  return this;\n+}\n+\n+Array.prototype.insert = (index, item) => {\n+  this.splice(index, 0, item);\n+}\n+\n+Array.prototype.replace_null = (replace = '\"\"') => {\n+  return JSON.parse(JSON.stringify(this).replace(/mull/g, replace));\n+}\n+\n+String.prototype.replaceAll = (search, replacement) => {\n+  var target = this;\n+  return target.replace(new RegExp(search, 'g'), replacement);\n+}\n"
                },
                {
                    "date": 1724580078704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     origin: \"http://localhost:4200\",\n     methods: [\"GET\", \"POST\"]\n   }\n })\n-var serverPort = 3004;\n+var serverPort = \"http://192.0.0.2:3004\";\n \n var user_socket_connect_list = [];\n \n // view engine setup\n@@ -89,188 +89,4 @@\n String.prototype.replaceAll = (search, replacement) => {\n   var target = this;\n   return target.replace(new RegExp(search, 'g'), replacement);\n }\n-var createError = require('http-errors');\n-var express = require('express');\n-var path = require('path');\n-var cookieParser = require('cookie-parser');\n-var logger = require('morgan');\n-\n-const cors = require('cors');\n-var fs = require('fs');\n-\n-var indexRouter = require('./routes/index');\n-var usersRouter = require('./routes/users');\n-\n-var app = express();\n-var server = require('http').createServer(app);\n-var io = require('socket.io')(server, {\n-  cors: {\n-    origin: \"http://localhost:4200\",\n-    methods: [\"GET\", \"POST\"]\n-  }\n-})\n-var serverPort = 3001;\n-\n-var user_socket_connect_list = [];\n-\n-// view engine setup\n-app.set('views', path.join(__dirname, 'views'));\n-app.set('view engine', 'ejs');\n-\n-app.use(logger('dev'));\n-app.use(express.json({ limit: '100mb' }));\n-app.use(express.urlencoded({ extended: true, limit: '100mb' }));\n-app.use(cookieParser());\n-app.use(express.static(path.join(__dirname, 'public')));\n-\n-app.use('/', indexRouter);\n-app.use('/users', usersRouter);\n-\n-const corsOptions = {\n-  origin: \"http://localhost:4200\",\n-}\n-\n-app.use(cors(corsOptions));\n-\n-// import express inside dynamic added.\n-fs.readdirSync('./controllers').forEach((file) => {\n-  if (file.substr(-3) == \".js\") {\n-    route = require('./controllers/' + file);\n-    route.controller(app, io, user_socket_connect_list);\n-  }\n-})\n-\n-// catch 404 and forward to error handler\n-app.use(function (req, res, next) {\n-  next(createError(404));\n-});\n-\n-// error handler\n-app.use(function (err, req, res, next) {\n-  // set locals, only providing error in development\n-  res.locals.message = err.message;\n-  res.locals.error = req.app.get('env') === 'development' ? err : {};\n-\n-  // render the error page\n-  res.status(err.status || 500);\n-  res.render('error');\n-});\n-\n-module.exports = app;\n-\n-server.listen(serverPort);\n-\n-console.log(\"Server Start : \" + serverPort );\n-\n-Array.prototype.swap = (x, y) => {\n-  var b = this[x];\n-  this[x] = this[y];\n-  this[y] = b;\n-  return this;\n-}\n-\n-Array.prototype.insert = (index, item) => {\n-  this.splice(index, 0, item);\n-}\n-\n-Array.prototype.replace_null = (replace = '\"\"') => {\n-  return JSON.parse(JSON.stringify(this).replace(/mull/g, replace));\n-}\n-\n-String.prototype.replaceAll = (search, replacement) => {\n-  var target = this;\n-  return target.replace(new RegExp(search, 'g'), replacement);\n-}\n-var createError = require('http-errors');\n-var express = require('express');\n-var path = require('path');\n-var cookieParser = require('cookie-parser');\n-var logger = require('morgan');\n-\n-const cors = require('cors');\n-var fs = require('fs');\n-\n-var indexRouter = require('./routes/index');\n-var usersRouter = require('./routes/users');\n-\n-var app = express();\n-var server = require('http').createServer(app);\n-var io = require('socket.io')(server, {\n-  cors: {\n-    origin: \"http://localhost:4200\",\n-    methods: [\"GET\", \"POST\"]\n-  }\n-})\n-var serverPort = 3005;\n-\n-var user_socket_connect_list = [];\n-\n-// view engine setup\n-app.set('views', path.join(__dirname, 'views'));\n-app.set('view engine', 'ejs');\n-\n-app.use(logger('dev'));\n-app.use(express.json({ limit: '100mb' }));\n-app.use(express.urlencoded({ extended: true, limit: '100mb' }));\n-app.use(cookieParser());\n-app.use(express.static(path.join(__dirname, 'public')));\n-\n-app.use('/', indexRouter);\n-app.use('/users', usersRouter);\n-\n-const corsOptions = {\n-  origin: \"http://localhost:4200\",\n-}\n-\n-app.use(cors(corsOptions));\n-\n-// import express inside dynamic added.\n-fs.readdirSync('./controllers').forEach((file) => {\n-  if (file.substr(-3) == \".js\") {\n-    route = require('./controllers/' + file);\n-    route.controller(app, io, user_socket_connect_list);\n-  }\n-})\n-\n-// catch 404 and forward to error handler\n-app.use(function (req, res, next) {\n-  next(createError(404));\n-});\n-\n-// error handler\n-app.use(function (err, req, res, next) {\n-  // set locals, only providing error in development\n-  res.locals.message = err.message;\n-  res.locals.error = req.app.get('env') === 'development' ? err : {};\n-\n-  // render the error page\n-  res.status(err.status || 500);\n-  res.render('error');\n-});\n-\n-module.exports = app;\n-\n-server.listen(serverPort);\n-\n-console.log(\"Server Start : \" + serverPort );\n-\n-Array.prototype.swap = (x, y) => {\n-  var b = this[x];\n-  this[x] = this[y];\n-  this[y] = b;\n-  return this;\n-}\n-\n-Array.prototype.insert = (index, item) => {\n-  this.splice(index, 0, item);\n-}\n-\n-Array.prototype.replace_null = (replace = '\"\"') => {\n-  return JSON.parse(JSON.stringify(this).replace(/mull/g, replace));\n-}\n-\n-String.prototype.replaceAll = (search, replacement) => {\n-  var target = this;\n-  return target.replace(new RegExp(search, 'g'), replacement);\n-}\n"
                },
                {
                    "date": 1724580139200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     origin: \"http://localhost:4200\",\n     methods: [\"GET\", \"POST\"]\n   }\n })\n-var serverPort = \"http://192.0.0.2:3004\";\n+var serverPort = 3004;\n \n var user_socket_connect_list = [];\n \n // view engine setup\n"
                },
                {
                    "date": 1724582420285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     origin: \"http://localhost:4200\",\n     methods: [\"GET\", \"POST\"]\n   }\n })\n-var serverPort = 3004;\n+var serverPort = 3001;\n \n var user_socket_connect_list = [];\n \n // view engine setup\n"
                },
                {
                    "date": 1724582562116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     origin: \"http://localhost:4200\",\n     methods: [\"GET\", \"POST\"]\n   }\n })\n-var serverPort = 3001;\n+var serverPort = 3004;\n \n var user_socket_connect_list = [];\n \n // view engine setup\n"
                },
                {
                    "date": 1724864810801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+var createError = require('http-errors');\n+var express = require('express');\n+var path = require('path');\n+var cookieParser = require('cookie-parser');\n+var logger = require('morgan');\n+\n+const cors = require('cors');\n+var fs = require('fs');\n+\n+var indexRouter = require('./routes/index');\n+var usersRouter = require('./routes/users');\n+\n+var app = express();\n+var server = require('http').createServer(app);\n+var io = require('socket.io')(server, {\n+  cors: {\n+    origin: \"http://localhost:4200\",\n+    methods: [\"GET\", \"POST\"]\n+  }\n+})\n+var serverPort = \"http://192.0.0.2:3004\";\n+\n+var user_socket_connect_list = [];\n+\n+// view engine setup\n+app.set('views', path.join(__dirname, 'views'));\n+app.set('view engine', 'ejs');\n+\n+app.use(logger('dev'));\n+app.use(express.json({ limit: '100mb' }));\n+app.use(express.urlencoded({ extended: true, limit: '100mb' }));\n+app.use(cookieParser());\n+app.use(express.static(path.join(__dirname, 'public')));\n+\n+app.use('/', indexRouter);\n+app.use('/users', usersRouter);\n+\n+const corsOptions = {\n+  origin: \"http://localhost:4200\",\n+}\n+\n+app.use(cors(corsOptions));\n+\n+// import express inside dynamic added.\n+fs.readdirSync('./controllers').forEach((file) => {\n+  if (file.substr(-3) == \".js\") {\n+    route = require('./controllers/' + file);\n+    route.controller(app, io, user_socket_connect_list);\n+  }\n+})\n+\n+// catch 404 and forward to error handler\n+app.use(function (req, res, next) {\n+  next(createError(404));\n+});\n+\n+// error handler\n+app.use(function (err, req, res, next) {\n+  // set locals, only providing error in development\n+  res.locals.message = err.message;\n+  res.locals.error = req.app.get('env') === 'development' ? err : {};\n+\n+  // render the error page\n+  res.status(err.status || 500);\n+  res.render('error');\n+});\n+\n+module.exports = app;\n+\n+server.listen(serverPort);\n+\n+console.log(\"Server Start : \" + serverPort );\n+\n+Array.prototype.swap = (x, y) => {\n+  var b = this[x];\n+  this[x] = this[y];\n+  this[y] = b;\n+  return this;\n+}\n+\n+Array.prototype.insert = (index, item) => {\n+  this.splice(index, 0, item);\n+}\n+\n+Array.prototype.replace_null = (replace = '\"\"') => {\n+  return JSON.parse(JSON.stringify(this).replace(/mull/g, replace));\n+}\n+\n+String.prototype.replaceAll = (search, replacement) => {\n+  var target = this;\n+  return target.replace(new RegExp(search, 'g'), replacement);\n+}\n"
                },
                {
                    "date": 1724864950932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,10 @@\n     origin: \"http://localhost:4200\",\n     methods: [\"GET\", \"POST\"]\n   }\n })\n-var serverPort = \"http://192.0.0.2:3004\";\n+var serverPort = \"3004\";\n+//var serverPort = \"http://192.0.0.2:3004\";\n \n var user_socket_connect_list = [];\n \n // view engine setup\n@@ -89,96 +90,4 @@\n String.prototype.replaceAll = (search, replacement) => {\n   var target = this;\n   return target.replace(new RegExp(search, 'g'), replacement);\n }\n-var createError = require('http-errors');\n-var express = require('express');\n-var path = require('path');\n-var cookieParser = require('cookie-parser');\n-var logger = require('morgan');\n-\n-const cors = require('cors');\n-var fs = require('fs');\n-\n-var indexRouter = require('./routes/index');\n-var usersRouter = require('./routes/users');\n-\n-var app = express();\n-var server = require('http').createServer(app);\n-var io = require('socket.io')(server, {\n-  cors: {\n-    origin: \"http://localhost:4200\",\n-    methods: [\"GET\", \"POST\"]\n-  }\n-})\n-var serverPort = 3004;\n-\n-var user_socket_connect_list = [];\n-\n-// view engine setup\n-app.set('views', path.join(__dirname, 'views'));\n-app.set('view engine', 'ejs');\n-\n-app.use(logger('dev'));\n-app.use(express.json({ limit: '100mb' }));\n-app.use(express.urlencoded({ extended: true, limit: '100mb' }));\n-app.use(cookieParser());\n-app.use(express.static(path.join(__dirname, 'public')));\n-\n-app.use('/', indexRouter);\n-app.use('/users', usersRouter);\n-\n-const corsOptions = {\n-  origin: \"http://localhost:4200\",\n-}\n-\n-app.use(cors(corsOptions));\n-\n-// import express inside dynamic added.\n-fs.readdirSync('./controllers').forEach((file) => {\n-  if (file.substr(-3) == \".js\") {\n-    route = require('./controllers/' + file);\n-    route.controller(app, io, user_socket_connect_list);\n-  }\n-})\n-\n-// catch 404 and forward to error handler\n-app.use(function (req, res, next) {\n-  next(createError(404));\n-});\n-\n-// error handler\n-app.use(function (err, req, res, next) {\n-  // set locals, only providing error in development\n-  res.locals.message = err.message;\n-  res.locals.error = req.app.get('env') === 'development' ? err : {};\n-\n-  // render the error page\n-  res.status(err.status || 500);\n-  res.render('error');\n-});\n-\n-module.exports = app;\n-\n-server.listen(serverPort);\n-\n-console.log(\"Server Start : \" + serverPort );\n-\n-Array.prototype.swap = (x, y) => {\n-  var b = this[x];\n-  this[x] = this[y];\n-  this[y] = b;\n-  return this;\n-}\n-\n-Array.prototype.insert = (index, item) => {\n-  this.splice(index, 0, item);\n-}\n-\n-Array.prototype.replace_null = (replace = '\"\"') => {\n-  return JSON.parse(JSON.stringify(this).replace(/mull/g, replace));\n-}\n-\n-String.prototype.replaceAll = (search, replacement) => {\n-  var target = this;\n-  return target.replace(new RegExp(search, 'g'), replacement);\n-}\n"
                },
                {
                    "date": 1725289625337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n     origin: \"http://localhost:4200\",\n     methods: [\"GET\", \"POST\"]\n   }\n })\n-var serverPort = \"3004\";\n+var serverPort = \"3001\";\n //var serverPort = \"http://192.0.0.2:3004\";\n \n var user_socket_connect_list = [];\n \n"
                },
                {
                    "date": 1725301852603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+var createError = require('http-errors');\n+var express = require('express');\n+var path = require('path');\n+var cookieParser = require('cookie-parser');\n+var logger = require('morgan');\n+\n+const cors = require('cors');\n+var fs = require('fs');\n+\n+var indexRouter = require('./routes/index');\n+var usersRouter = require('./routes/users');\n+\n+var app = express();\n+var server = require('http').createServer(app);\n+var io = require('socket.io')(server, {\n+  cors: {\n+    origin: \"http://localhost:4200\",\n+    methods: [\"GET\", \"POST\"]\n+  }\n+})\n+var serverPort = \"3004\";\n+//var serverPort = \"http://192.0.0.2:3004\";\n+\n+var user_socket_connect_list = [];\n+\n+// view engine setup\n+app.set('views', path.join(__dirname, 'views'));\n+app.set('view engine', 'ejs');\n+\n+app.use(logger('dev'));\n+app.use(express.json({ limit: '100mb' }));\n+app.use(express.urlencoded({ extended: true, limit: '100mb' }));\n+app.use(cookieParser());\n+app.use(express.static(path.join(__dirname, 'public')));\n+\n+app.use('/', indexRouter);\n+app.use('/users', usersRouter);\n+\n+const corsOptions = {\n+  origin: \"http://localhost:4200\",\n+}\n+\n+app.use(cors(corsOptions));\n+\n+// import express inside dynamic added.\n+fs.readdirSync('./controllers').forEach((file) => {\n+  if (file.substr(-3) == \".js\") {\n+    route = require('./controllers/' + file);\n+    route.controller(app, io, user_socket_connect_list);\n+  }\n+})\n+\n+// catch 404 and forward to error handler\n+app.use(function (req, res, next) {\n+  next(createError(404));\n+});\n+\n+// error handler\n+app.use(function (err, req, res, next) {\n+  // set locals, only providing error in development\n+  res.locals.message = err.message;\n+  res.locals.error = req.app.get('env') === 'development' ? err : {};\n+\n+  // render the error page\n+  res.status(err.status || 500);\n+  res.render('error');\n+});\n+\n+module.exports = app;\n+\n+server.listen(serverPort);\n+\n+console.log(\"Server Start : \" + serverPort );\n+\n+Array.prototype.swap = (x, y) => {\n+  var b = this[x];\n+  this[x] = this[y];\n+  this[y] = b;\n+  return this;\n+}\n+\n+Array.prototype.insert = (index, item) => {\n+  this.splice(index, 0, item);\n+}\n+\n+Array.prototype.replace_null = (replace = '\"\"') => {\n+  return JSON.parse(JSON.stringify(this).replace(/mull/g, replace));\n+}\n+\n+String.prototype.replaceAll = (search, replacement) => {\n+  var target = this;\n+  return target.replace(new RegExp(search, 'g'), replacement);\n+}\n"
                }
            ],
            "date": 1723814063854,
            "name": "Commit-0",
            "content": "var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\nconst cors = require('cors');\nvar fs = require('fs');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\n\nvar app = express();\nvar server = require('http').createServer(app);\nvar io = require('socket.io')(server, {\n  cors: {\n    origin: \"http://localhost:4200\",\n    methods: [\"GET\", \"POST\"]\n  }\n})\nvar serverPort = 3005;\n\nvar user_socket_connect_list = [];\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\napp.use(express.json({ limit: '100mb' }));\napp.use(express.urlencoded({ extended: true, limit: '100mb' }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n\nconst corsOptions = {\n  origin: \"http://localhost:4200\",\n}\n\napp.use(cors(corsOptions));\n\n// import express inside dynamic added.\nfs.readdirSync('./controllers').forEach((file) => {\n  if (file.substr(-3) == \".js\") {\n    route = require('./controllers/' + file);\n    route.controller(app, io, user_socket_connect_list);\n  }\n})\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n\nserver.listen(serverPort);\n\nconsole.log(\"Server Start : \" + serverPort );\n\nArray.prototype.swap = (x, y) => {\n  var b = this[x];\n  this[x] = this[y];\n  this[y] = b;\n  return this;\n}\n\nArray.prototype.insert = (index, item) => {\n  this.splice(index, 0, item);\n}\n\nArray.prototype.replace_null = (replace = '\"\"') => {\n  return JSON.parse(JSON.stringify(this).replace(/mull/g, replace));\n}\n\nString.prototype.replaceAll = (search, replacement) => {\n  var target = this;\n  return target.replace(new RegExp(search, 'g'), replacement);\n}\n"
        }
    ]
}